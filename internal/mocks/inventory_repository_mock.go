// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/repository/inventory_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	db "github.com/myacey/avito-shop/db/sqlc"
)

// MockInventoryRepository is a mock of InventoryRepository interface.
type MockInventoryRepository struct {
	ctrl     *gomock.Controller
	recorder *MockInventoryRepositoryMockRecorder
}

// MockInventoryRepositoryMockRecorder is the mock recorder for MockInventoryRepository.
type MockInventoryRepositoryMockRecorder struct {
	mock *MockInventoryRepository
}

// NewMockInventoryRepository creates a new mock instance.
func NewMockInventoryRepository(ctrl *gomock.Controller) *MockInventoryRepository {
	mock := &MockInventoryRepository{ctrl: ctrl}
	mock.recorder = &MockInventoryRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInventoryRepository) EXPECT() *MockInventoryRepositoryMockRecorder {
	return m.recorder
}

// AddItemToInventory mocks base method.
func (m *MockInventoryRepository) AddItemToInventory(c context.Context, userID int32, itemType string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddItemToInventory", c, userID, itemType)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddItemToInventory indicates an expected call of AddItemToInventory.
func (mr *MockInventoryRepositoryMockRecorder) AddItemToInventory(c, userID, itemType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddItemToInventory", reflect.TypeOf((*MockInventoryRepository)(nil).AddItemToInventory), c, userID, itemType)
}

// GetInventory mocks base method.
func (m *MockInventoryRepository) GetInventory(c context.Context, userID int32) ([]*db.Inventory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInventory", c, userID)
	ret0, _ := ret[0].([]*db.Inventory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInventory indicates an expected call of GetInventory.
func (mr *MockInventoryRepositoryMockRecorder) GetInventory(c, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInventory", reflect.TypeOf((*MockInventoryRepository)(nil).GetInventory), c, userID)
}
